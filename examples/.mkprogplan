mkprog better-mkprog "Create a program that improves upon the original mkprog by incorporating testing and result analysis. The program should:

1. Accept command-line arguments:
   - The program name to generate
   - The program description
   - Number of iterations (n) to run tests (default 5)

2. For each iteration:
   - Run the original mkprog command to generate the program
   - Compile the generated program
   - Run a series of predefined tests on the compiled program
   - Save the test results as a Git note
   - Assign a score to the generated program based on test results

3. After all iterations:
   - Compare the scores of all generated versions
   - Present the user with the best-performing version
   - Show a summary of all versions and their scores

4. Implement additional features:
   - Use concurrent processing for running iterations
   - Provide verbose output option for detailed logging
   - Allow custom test definitions via a configuration file

5. Use the langchaingo library to analyze test results and provide insights

6. Follow Go best practices, use proper error handling, and provide clear user feedback

7. Include appropriate documentation and usage instructions in the README.md file"
